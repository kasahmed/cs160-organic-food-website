<%- contentFor('title') %>
<%-
  city
    .split('-')
    .map(word =>
      word
        .charAt(0)
        .toUpperCase()+ word.substring(1)
    )
    .join(' ')
%>

<%- contentFor('themeColor') %>
#2196f3

<%- contentFor('body') %>
<div class="mdc-grid-list mdc-grid-list--twoline-caption mdc-grid-list--with-icon-align-start">
  <ul class="mdc-grid-list__tiles">
    <% let index = 0; %>
    <% for (let item of items) { %>
      <li class="mdc-grid-tile" style="animation-delay: <%= index++ * 50 %>ms">
        <div class="mdc-grid-tile__primary">
          <img class="mdc-grid-tile__primary-content" src="<%= item.IMAGEURL %>">
        </div>
        <span class="mdc-grid-tile__secondary">
          <i class="mdc-grid-tile__icon material-icons" data-mdc-auto-init="MDCRipple">add_shopping_cart</i>
          <span class="mdc-grid-tile__title"><%= item.NAME %></span>
          <span class="mdc-grid-tile__support-text">$<%= item.PRICE.toFixed(2) %></span>
        </span>
      </li>
    <% } %>
  </ul>
</div>

<button class="mdc-fab material-icons shopping-cart-fab">
  <span class="mdc-fab__icon">shopping_cart</span>
  <div class="expanded-content">
    <ul class="mdc-list">
      <% for (let i = 0; i < 10; i++) { %>
        <li class="mdc-list-item">
            item <%= i %>
        </li>
      <% } %>
    </ul>
    <button class="mdc-button" data-mdc-auto-init="MDCRipple">Check Out</button>
  </div>
</button>

<style>
  .mdc-grid-list__tiles {
    justify-content: center;
  }

  .mdc-grid-tile {
    animation: fadeInDown 375ms cubic-bezier(0.4, 0, 0.2, 1);
    animation-fill-mode: both;
  }

  .mdc-grid-tile__secondary {
    background: rgba(0, 0, 0, 0.3);
  }

  .mdc-grid-tile__icon {
    cursor: pointer;
  }

  .shopping-cart-fab {
    animation: scaleUp 375ms cubic-bezier(0.4, 0, 0.2, 1) 375ms;
    animation-fill-mode: both;
    transition: all 375ms cubic-bezier(0.4, 0, 0.2, 1);

    bottom: 1rem;
    overflow: hidden;
    position: fixed;
    right: 1rem;
  }

  .shopping-cart-fab:not([class~='expanded']) > .expanded-content {
    display: none;
  }

  .shopping-cart-fab.expanded {
    border-radius: 0;
    overflow-y: auto;

    width: 90vw;
    height: 50vh;
  }

  .shopping-cart-fab.expanded > span {
    display: none;
  }

  .shopping-cart-fab.expanded > .expanded-content {
    display: block;
  }

  @media (min-width: 600px) {
    .shopping-cart-fab.expanded {
      width: 50vw;
    }
  }
</style>

<script>
  (() => {
    const shoppingCartFab = document.querySelector('.shopping-cart-fab');
    let lastX = 0, lastY = 0;
    shoppingCartFab.addEventListener('click', event => {
      if (!shoppingCartFab.classList.contains('expanded')) {
        shoppingCartFab.classList.toggle('expanded');
        shoppingCartFab.classList.toggle('material-icons');
      }
      lastX = event.screenX;
      lastY = event.screenY;
    });
    window.addEventListener('click', event => {
      if (
        event.screenX !== lastX &&
        event.screenY !== lastY &&
        shoppingCartFab.classList.contains('expanded')
      ) {
        shoppingCartFab.classList.toggle('expanded');
        shoppingCartFab.classList.toggle('material-icons');
        shoppingCartFab.scrollTop = 0;
      }
    });
  })();
</script>
